package client

import "encoding/json"

// poc status
const (
	// review  failure
	FAIL = "failed"
	// review pending
	PEND = "pending"
	// review ok
	PUBLISH = "publish"
	// you purchas poc
	PURCHAS = "purchased"
)

// fofa poc file
type Exploit struct {
	// author name
	Author string `json:"author"`
	// poc descript
	Description string `json:"description"`
	// poc filename
	Filename string `json:"filename"`
	// fofa query rule
	Fofaquery string `json:"fofaquery"`
	// exploir level
	Level int `json:"level"`
	// poc name
	Name string `json:"name"`
	// exploit product
	Product string `json:"product"`
	// product url
	Homapage string `json:"homapage"`
	// is zero day?
	IsZeroDay bool
	// poc update time
	UpdateAt string `json:"update_at"`
	// poc status
	Status string
}

// ExploitResponse get expoloit list  response
type ExploitResponse struct {
	ErrorMsg
	Failed    []Exploit `json:"failed"`
	Pending   []Exploit `json:"pending"`
	Published []Exploit `json:"published"`
	Purchased []Exploit `json:"purchased"`
}

// GetPoc  wiil get you  poc
func (u *User) GetPoc() (exploits ExploitResponse, err error) {
	reqUrl := GetApiUrl(ApiExploitList)
	queryString := reqUrl.Query()
	reqUrl.RawQuery = u.AddQuery(queryString).Encode()
	body, err := u.Req(reqUrl)
	if err != nil {
		return
	}
	err = json.Unmarshal(body, &exploits)
	return
}
